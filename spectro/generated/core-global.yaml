apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: capvc-controller-manager
  name: capi-webhook-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capvc-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    cluster.x-k8s.io/v1alpha3: v1alpha1
    cluster.x-k8s.io/v1alpha4: v1alpha1
    cluster.x-k8s.io/v1beta1: v1alpha1
    control-plane: capvc-controller-manager
  name: vclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capvc-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: VCluster
    listKind: VClusterList
    plural: vclusters
    singular: vcluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VCluster is the Schema for the vclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VClusterSpec defines the desired state of VCluster
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              helmRelease:
                description: The helm release configuration for the virtual cluster.
                  This is optional, but when filled, specified chart will be deployed.
                properties:
                  chart:
                    description: infos about what chart to deploy
                    properties:
                      name:
                        description: the name of the helm chart
                        type: string
                      repo:
                        description: the repo of the helm chart
                        type: string
                      version:
                        description: the version of the helm chart to use
                        type: string
                    type: object
                  values:
                    description: the values for the given chart
                    type: string
                type: object
              kubernetesVersion:
                description: Kubernetes version that should be used in this vcluster
                  instance, e.g. "1.23". Versions out of the supported range will
                  be ignored, and earliest/latest supported version will be used instead.
                type: string
            type: object
          status:
            description: VClusterStatus defines the observed state of VCluster
            properties:
              conditions:
                description: Conditions holds several conditions the vcluster might
                  be in
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether this field
                        is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              initialized:
                description: Initialized defines if the virtual cluster control plane
                  was initialized.
                type: boolean
              message:
                description: Message describes the reason in human readable form why
                  the cluster is in the currrent phase
                type: string
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              phase:
                description: Phase describes the current phase the virtual cluster
                  is in
                type: string
              ready:
                description: Ready defines if the virtual cluster control plane is
                  ready.
                type: boolean
              reason:
                description: Reason describes the reason in machine readable form
                  why the cluster is in the current phase
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 4012c7fa.cluster.x-k8s.io
kind: ConfigMap
metadata:
  labels:
    control-plane: capvc-controller-manager
  name: capvc-manager-config
  namespace: capi-webhook-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: capvc-controller-manager
  name: capvc-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: capvc-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: capvc-controller-manager
  name: capvc-controller-manager
  namespace: capi-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: capvc-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: capvc-controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        image: gcr.io/spectro-images-public/release/cluster-api-virtual/cluster-api-virtual-controller:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capvc-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    control-plane: capvc-controller-manager
  name: capvc-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - capvc-webhook-service.capi-webhook-system.svc
  - capvc-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capvc-selfsigned-issuer
  secretName: capvc-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    control-plane: capvc-controller-manager
  name: capvc-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capvc-serving-cert
  labels:
    control-plane: capvc-controller-manager
  name: capvc-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: capvc-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha1-vcluster
  failurePolicy: Fail
  name: mvcluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vclusters
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capvc-serving-cert
  labels:
    control-plane: capvc-controller-manager
  name: capvc-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: capvc-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha1-vcluster
  failurePolicy: Fail
  name: vvcluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - vclusters
  sideEffects: None
